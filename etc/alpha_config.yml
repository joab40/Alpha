main:
    quit: avsluta
    message_broaker:
    area:
        0: livingroom
        1: kitchen
        2: hall

sasha:
    enable: False
    daemon: False
    starts: ../bin/alpha.py start
    stopps: ../bin/alpha.py stop
    status: ../bin/alpha.py status
    restarts: ../bin/alpha.py restart
    espeak: /usr/bin/espeak -v swedish

# BRAIN WAVES synaps MQTT
mqtt:
    enable: False
    daemon: True
    starts: sudo /etc/init.d/mosquitto start
    stopps: sudo /etc/init.d/mosquitto stop
    path: /usr/sbin/mosquitto
    host: localhost
    port: 1883
    config: /etc/mosquitto/mosquitto.conf
    restarts: sudo /etc/init.d/mosquitto restart

    # This is where alpha will listen for incomming data from modules
    # If a module for example would like to talk to alpha
    # The module config manage mqtt topic by its own config.
    topic:
        # Brain wildcard - anything incomming
        alpha: alpha/#
        # TEST
        cam: alpha/cam
        # Camera send
        campub: alpha/campub
        # Camera recive
        camsub: alpha/camsub
        # GPIO servo recv instruktion
        cambrain: alpha/brain/cam/wave
        # STT Speach to Text  Input data sent to brain
        stt: alpha/stt
        # TTS Text to speach  Create voice from text
        tts: alpha/tts
        # Chatbot - sent message incomming to broker
        chatbot: alpha/chatbot
        # Samsung remote control with raspberry pi and gpio
        samsungremote: alpha/samsungremote
        # Tellstick
        tellstick: alpha/tellstick
        # Chatbot 2
        alva: alpha/alva
        # Chatbot 3
        alfa: alpha/alfa

# Translate
#yandex:
#    api_key: trnsl.1.1.20160313T204945Z.9728f9893e4cbe8d.c758fc267bbddd202f145741bd673ca785c4fb37
chatbot:

    enable: True
    daemon: True
    # Answer a simple question
    mqttalive: True
    mqttparam: text
    mqtttopic: fromalpha/chatbot
    enable_tty: True
    starts: ../PRE_DEV_ALPHA20/chatbot.py start
    stopps: ../PRE_DEV_ALPHA20/chatbot.py stop
    restarts: ../PRE_DEV_ALPHA20/chatbot.py --stop;../PRE_DEV_ALPHA20/chatbot.py --start
    status: ../PRE_DEV_ALPHA20/chatbot.py --status
    config: ../etc/nonechatbot.config
    pidfil: /tmp/motion/chatbot.pid
    ctrl: ../bin/nonechatbotctrl.py
    path: /usr/bin/nonepaht
    # chatbot should not have a releation to another chatbot.
    # Its the senders relationship that is important.
    relation: tellstick samsungremote tts
    gpio: False

# chatbot alpha can olso be a seder from stt
alfa:
    enable: False
    daemon: False
    mqttalive: True
    mqttparam: text
    mqtttopic: fromalpha/alfa
    enable_tty: True
    starts: ../PRE_DEV_ALPHA20/alfa.py start
    stopps: ../PRE_DEV_ALPHA20/alfa.py stop
    restarts: ../PRE_DEV_ALPHA20/chatbot.py --stop;../PRE_DEV_ALPHA20/alfa.py --start
    status: ../PRE_DEV_ALPHA20/alfa.py --status
    config: ../etc/nonealfa.config
    pidfil: /tmp/motion/alfa.pid
    ctrl: ../bin/nonealfactrl.py
    path: /usr/bin/nonepaht
    # chatbot should not have a releation to another chatbot.
    # Its the senders relationship that is important.
    relation: chatbot alfa tts
    gpio: False

#  chatbot alva can also be a sender from stt
alva:
    enable: False
    daemon: False
    mqttalive: True
    mqttparam: text
    mqtttopic: fromalpha/alva
    enable_tty: True
    starts: ../PRE_DEV_ALPHA20/alva.py start
    stopps: ../PRE_DEV_ALPHA20/alva.py stop
    restarts: ../PRE_DEV_ALPHA20/chatbot.py --stop;../PRE_DEV_ALPHA20/alva.py --start
    status: ../PRE_DEV_ALPHA20/alva.py --status
    config: ../etc/nonealva.config
    pidfil: /tmp/motion/alva.pid
    ctrl: ../bin/nonealvactrl.py
    path: /usr/bin/nonepaht
    # chatbot should not have a releation to another chatbot.
    # Its the senders relationship that is important.
    relation: chatbot alva tts
    gpio: False

stt:
    enable: True
    daemon: False
    mqttalive: False
    mqttparam: text
    relation: chatbot tellstick translate wolframalpha


# TTS
tts:
    enable: True
    daemon: True
    mqttalive: False
    mqttparam: text
    mqtttopic: fromalpha/tts
    enable_tty: True
    starts: ../PRE_DEV_ALPHA20/tts.py start
    stopps: ../PRE_DEV_ALPHA20/tts.py stop
    restarts: ../PRE_DEV_ALPHA20/tts.py --stop;../PRE_DEV_ALPHA20/tts.py --start
    status: ../PRE_DEV_ALPHA20/tts.py --status
    config: ../etc/nonetts.config
    pidfil: /tmp/motion/tts.pid
    ctrl: ../bin/nonettsctrl.py
    path: /usr/bin/nonepaht

    # Pyvonna parameters
    user_key: GDNAID2S3BMA3DVBHUMQ
    cert_key: cGdm9AuUXNga6BGa1bKORk3kVca9jUBxILDXu8yP
    voice: Astrid

samsungremote:
    enable: True
    daemon: True
    mqttalive: False
    mqttparam: text
    mqtttopic: fromalpha/samsungremote
#    jag slår på tv: command
#    jag stänger av tv: command
#    jag höjer volumen: command
#    jag höjer volumen 2 steg: command
#    jag sänker volymen: command
#    jag stänger av tv ljudet: command
#    jag slår på tv ljudet: command
    enable_tty: False
    starts: ssh pi@pi /home/pi/Alpha/PRE_DEV_ALPHA20/samsungremote.py start
    stopps: ../PRE_DEV_ALPHA20/samsungremote.py stop
    restarts: ../PRE_DEV_ALPHA20/samsungremote.py --stop;../PRE_DEV_ALPHA20/samsungremote.py --start
    status: ../PRE_DEV_ALPHA20/samsungremote.py --status
    config: ../etc/nonesamsungremote.config
    pidfil: /tmp/motion/samsungremote.pid
    ctrl: ../bin/nonesamsungremotectrl.py
    path: /usr/bin/nonepaht
    releation: tts

# TTS for Alpha Version 1
pyvonna:
    enable: False
    daemon: False
    mqttalive: False
    mqttparam: text
    user_key: GDNAID2S3BMA3DVBHUMQ
    cert_key: cGdm9AuUXNga6BGa1bKORk3kVca9jUBxILDXu8yP
    voice: Astrid

tellstick:
    enable: True
    daemon: True
    mqttalive: False
    mqttparam: text
    mqtttopic: fromalpha/tellstick
    starts: ../PRE_DEV_ALPHA20/tellstick.py start
    stopps: ../PRE_DEV_ALPHA20/tellstick.py stop
    restarts: ../PRE_DEV_ALPHA20/tellstick.py --stop;../PRE_DEV_ALPHA20/tellstick.py --start
    status: ../PRE_DEV_ALPHA20/tellstick.py --status
    config: ../etc/nonestellstick.config
    pidfil: /tmp/motion/tellstick.pid
    ctrl: ../bin/nonestellstickctrl.py
    path: /usr/bin/nonepaht
    tellsticktemp: ssh joab40@life /usr/local/bin/temperatur.sh
    ebbas vardagsrumlampa av: ssh joab40@life /usr/bin/tdtool --off ebbastält
    aktiverar ebbas lampa: ssh joab40@life /usr/bin/tdtool --on ebbastält
    releation: tts

# Mainly for translation en-sv sv-en
translate:
    enable: False
    daemon: False
    mqttalive: False
    mqttparam: command
    #service: google
    service: yandex
    api_key: trnsl.1.1.20160313T204945Z.9728f9893e4cbe8d.c758fc267bbddd202f145741bd673ca785c4fb37
    google_api_key: AIzaSyAk5O0UkWrhyb7JhZLMwSnqD_FtghXhiTU
    relation: wolframalpha tts

# Ask internet
wolframalpha:
    enable: False
    daemon: False
    mqttalive: False
    mqttparam: command
    alpha_api_key: T75KQ9-PEAV67VPT8
    relation: translate tts

# Face and Voice Reqognition
keylemon:
    enable: False
    daemon: False
    mqttalive: False
    mqttparam: command
    config:
        user_key: joab40
        keylemon_api_key: 1tBdvyJOPy5gl9ivADIzITfdKGrptpv395GVU1hDb0Nff2Ntvxrydm
    model:
        johan: 04da8e8c-624a-4977-b048-6f7d95e15ca8

# Raspberry PI output. led and motor
gpio:
    enable: False
    daemon: False
    mqttalive: False
    mqttparam: command
    raspberrypi: False
    green: 18
    blue: 18
    yellow: 23
    red: 24

# Enable Alice-bot as secondery chatbot
bot:
    enable: False
    daemon: False
    mqttalive: False
    mqttparam: command
    alice: True
    translate: True

# Eye Camera Config - Iris
camera:
    enable: False
    daemon: False
    mqttalive: False
    mqttparam: command
    starts: ../PRE_DEV_ALPHA20/cam.py start
    stopps: ../PRE_DEV_ALPHA20/cam.py stop
    restarts: ../PRE_DEV_ALPHA20/cam.py restart
    zones: 5
    x_pixels: 640
    angle_degrees: 30

# Motion detection - rasberry sudo enable
motion:
    enable: False
    daemon: False
    mqttalive: False
    mqttparam: command
    starts: ../PRE_DEV_ALPHA20/motion.py --start
    stopps: ../PRE_DEV_ALPHA20/motion.py --stop
    restarts: ../PRE_DEV_ALPHA20/motion.py --stop;../bin/motion.py --start
    config: ../etc/motion.config
    pidfil: /tmp/motion/motion.pid
    ctrl: ../bin/motion.py
    path: /usr/bin/motion


# This is for description - A dummy module example
module_template:
    # Enable module
    enable: False
    # If module are going to be mangae by alpha as a deamon
    daemon: False
    # Answer a simple question, depricated. Problably not in use
    mqttalive: False
    # Defines how json message is manage. For example test or int.
    mqttparam: text
    # Recv mqtt topic for deamon
    mqtttopic: fromalpha/chatbot
    # If deamon is running local with alpha. tty is used for output from deamon
    enable_tty: False
    starts: ../PRE_DEV_ALPHA20/chatbot.py start
    stopps: ../PRE_DEV_ALPHA20/chatbot.py stop
    restarts: ../PRE_DEV_ALPHA20/chatbot.py --stop;../PRE_DEV_ALPHA20/chatbot.py --start
    status: ../PRE_DEV_ALPHA20/chatbot.py --status
    config: ../etc/nonechatbot.config
    pidfil: /tmp/motion/chatbot.pid
    ctrl: ../bin/nonechatbotctrl.py
    path: /usr/bin/nonepaht
    # chatbot should not have a releation to another chatbot.
    # Its the senders relationship that is important.
    relation: tellstick samsungremote tts
    # If deamon should use led lights
    gpio: False